/* Write a program to check for spy number */

Note:
▪ A positive integer is called a spy number if the sum and product of its digits are equal. In 
other words, a number whose sum and product of all digits are equal is called a spy 
number.
▪ Let's take the number 1124 and check whether the number is a spy or not. First, we will 
split it into digits (1, 1, 2, 4). After that find the sum and product of all the digits.
▪ Sum=1+1+2+4=8
▪ Product=1*1*2*4=8
▪ We observe that the sum and product of the digits both are equal. Hence, 1124 is a spy 
number.
▪ Similarly, we can check other numbers also. Some other spy numbers are 22, 123, 132, 
etc…

-------------------------------------------------------------------------------------------------------------------------------

public class JavaConqueror {
    public static void main(String[] args)
    {
        int number = 1125;
        if (spyNumber(number))
        {
            System.out.println(number+" is a spy number");
        }
        else
        {
            System.out.println(number+" is not a spy number");
        }
    }
    static boolean spyNumber(int number)
    {
        int sum=0,mul=1;
        while (number>0)
        {
            int lastDigit = number%10;
            sum=sum+lastDigit;
            mul=mul*lastDigit;
            number=number/10;
        }
        return mul==sum;
    }
}
Output:
1125 is not a spy number

---------------------------------------------------------------------------------------------------------------------------------------------------------------

public class PractiseNow {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter first Number");
        int num = sc.nextInt();
        System.out.println(spyNum(num));
    }
    static boolean spyNum(int num)
    {
        String strNum = Integer.toString(num);
        char[] ch = strNum.toCharArray();
        int sum=0, product=1;
        for (int i = 0; i < ch.length; i++)
        {
         sum = sum + (ch[i]-'0');
         product = product * (ch[i]-'0');
        }
        return sum==product;
    }
}
output:

Enter first Number
1124
true

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

public class Practise
{
    public static void main(String[] args)
    {
      int num = 1124;
        System.out.println(neonNum(num));
    }
    static boolean neonNum(int num)
    {
      return sumOfDigits(num)==prodOfDigits(num)?true:false;
    }
    static int sumOfDigits(int num)
    {
        int sum=0;
        while (num>0)
        {
            int last = num%10;
            num = num/10;
            sum = sum+ last;
        }
        return sum;
    }
    static int prodOfDigits(int num)
    {
        int prod=1;
        while (num>0)
        {
            int last = num%10;
            num = num/10;
            prod = prod*last;
        }
        return prod;
    }
}

Output:
true
