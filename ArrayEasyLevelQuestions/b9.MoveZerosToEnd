/* write a program to move all zeros to the end in an array */


import java.util.*;

public class JavaConqueror
{
    public static void main(String[] args)
    {
     int[] nums = {0,2,3,0,4,0,5,6,0,7,0,8,9,0};

        System.out.println(Arrays.toString(zeroAtEnd(nums)));
    }
    static int[] zeroAtEnd(int[] nums)
    {
        if (nums==null || nums.length==0)
        {
            return new int[0];
        }

        int[] result = new int[nums.length];
        int index=0;
        for (int i = 0; i < nums.length ; i++)
        {

         if (nums[i]!=0)
         {
             result[index]=nums[i];
             index++;
         }
        }
        return result;
    }
}
Output : 
[2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0]

------------------------------------------------(OR)-----------------------------------------------------------

import java.util.*;

public class JavaConqueror {
    public static void main(String[] args) {
        int[] nums = {0, 2, 3, 0, 4, 0, 5, 6, 0, 7, 0, 8, 9, 0};
        zeroAtEnd(nums);
        System.out.println(Arrays.toString(nums));
    }

    static void zeroAtEnd(int[] nums) {
        if (nums == null || nums.length == 0) {
            return;
        }

        int nonZeroIndex = 0;

        // Traverse the array and move non-zero elements to the front
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 0) {
                if (i != nonZeroIndex) {
                    swap(nums, nonZeroIndex, i);
                }
                nonZeroIndex++;
            }
        }
    }

    static void swap(int[] nums, int first, int second) {
        int temp = nums[first];
        nums[first] = nums[second];
        nums[second] = temp;
    }
}
Output : 
[2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0]

