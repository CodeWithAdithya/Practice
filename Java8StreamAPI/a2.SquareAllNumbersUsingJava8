/* Write a Java 8 program to square all numbers in a list using map() *\

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class SquareNumbersExample {
    public static void main(String[] args) {
        List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5);

        // Using map() to square all numbers
        List<Integer> squaredNumbers = numbers.stream()
                                              .map(number -> number * number)
                                              .collect(Collectors.toList()); // Before java 16

        // Print the squared numbers
        System.out.println(squaredNumbers);
    }
}
Output:
1
4
9
16
25

                            or 


import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class SquareNumbersExample {
    public static void main(String[] args) {
        List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5);

        // Using map() to square all numbers
        List<Integer> squaredNumbers = numbers.stream()
                                              .map(number -> number * number)
                                              .toList(); // After java 16

        // Print the squared numbers
        System.out.println(squaredNumbers);
    }
}
Output:
1
4
9
16
25

----------------------------------------------------------(without java 8)----------------------------------------------------------------------------------------------------------------

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class SquareNumbersTraditional {
    public static void main(String[] args) {
        List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5);
        List<Integer> squaredNumbers = new ArrayList<>();

        // Using a traditional for-each loop to square all numbers
        for (Integer number : numbers) {
            squaredNumbers.add(number * number);
        }

        // Print the squared numbers
        System.out.println(squaredNumbers);
    }
}
Output:
[1, 4, 9, 16, 25]
