/* Java Program to Find the First Non-repeated Character in a String *\

import java.util.Scanner;

public class Practise
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the string");
        String str = sc.nextLine();
        System.out.println(findFirstNonRepeatedCharacter(str));
    }
    static char findFirstNonRepeatedCharacter(String str)
    {
     int[] charCount = new int[256];

     for (char ch : str.toCharArray())
     {
         charCount[ch]++;
     }
     for (char ch : str.toCharArray())
     {
         if (charCount[ch]==1)
         {
             return ch;
         }
     }
     return '\0';
    }
}

output : 
Enter the string
swiss
w


----------------------------------------------------------------------------------------------------------------------------------------------------------------


import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Scanner;

public class Practise
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the string");
        String str = sc.nextLine();
        System.out.println(findFirstNonRepeatedCharacter(str));
    }
    static char findFirstNonRepeatedCharacter(String str)
    {
        Map<Character,Integer> charCount = new LinkedHashMap<>();
        for (char ch : str.toCharArray())
        {
          charCount.put(ch,charCount.getOrDefault(ch,0)+1);
        }
        for (Map.Entry<Character,Integer> entry : charCount.entrySet())
        {
            if (entry.getValue()==1)
            {
                return entry.getKey();
            }
        }
        return '\0';
    }
}

output : 

Enter the string
swiss
w

// The getOrDefault method in Java is a part of the Map interface. It is used to fetch the value associated with a specific key in the map.
If the key is not present, it returns a specified default value.

Syntax :
V getOrDefault(Object key, V defaultValue)

-> key: The key to search for in the map.
-> defaultValue: The value to return if the key is not present in the map.

Returns:
The value associated with the key if it exists.
The defaultValue if the key does not exist.


charCount.getOrDefault(ch, 0)
-> The getOrDefault method checks if the character ch exists as a key in the charCount map:
-> If ch exists, it retrieves its value (current count).
-> If ch does not exist, it returns the default value 0.
This ensures that even if the character is new to the map, the code handles it gracefully by starting its count at 0.

+ 1
-> Adds 1 to the retrieved count to increment the number of occurrences of ch.


